{"version":3,"file":"validate.js","sources":["uni_modules/uni-forms/components/uni-forms/validate.js"],"sourcesContent":["var pattern = {\r\n\temail: /^\\S+?@\\S+?\\.\\S+?$/,\r\n\tidcard: /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/,\r\n\turl: new RegExp(\r\n\t\t\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$\",\r\n\t\t'i')\r\n};\r\n\r\nconst FORMAT_MAPPING = {\r\n\t\"int\": 'integer',\r\n\t\"bool\": 'boolean',\r\n\t\"double\": 'number',\r\n\t\"long\": 'number',\r\n\t\"password\": 'string'\r\n\t// \"fileurls\": 'array'\r\n}\r\n\r\nfunction formatMessage(args, resources = '') {\r\n\tvar defaultMessage = ['label']\r\n\tdefaultMessage.forEach((item) => {\r\n\t\tif (args[item] === undefined) {\r\n\t\t\targs[item] = ''\r\n\t\t}\r\n\t})\r\n\r\n\tlet str = resources\r\n\tfor (let key in args) {\r\n\t\tlet reg = new RegExp('{' + key + '}')\r\n\t\tstr = str.replace(reg, args[key])\r\n\t}\r\n\treturn str\r\n}\r\n\r\nfunction isEmptyValue(value, type) {\r\n\tif (value === undefined || value === null) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (typeof value === 'string' && !value) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (Array.isArray(value) && !value.length) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (type === 'object' && !Object.keys(value).length) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nconst types = {\r\n\tinteger(value) {\r\n\t\treturn types.number(value) && parseInt(value, 10) === value;\r\n\t},\r\n\tstring(value) {\r\n\t\treturn typeof value === 'string';\r\n\t},\r\n\tnumber(value) {\r\n\t\tif (isNaN(value)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn typeof value === 'number';\r\n\t},\r\n\t\"boolean\": function(value) {\r\n\t\treturn typeof value === 'boolean';\r\n\t},\r\n\t\"float\": function(value) {\r\n\t\treturn types.number(value) && !types.integer(value);\r\n\t},\r\n\tarray(value) {\r\n\t\treturn Array.isArray(value);\r\n\t},\r\n\tobject(value) {\r\n\t\treturn typeof value === 'object' && !types.array(value);\r\n\t},\r\n\tdate(value) {\r\n\t\treturn value instanceof Date;\r\n\t},\r\n\ttimestamp(value) {\r\n\t\tif (!this.integer(value) || Math.abs(value).toString().length > 16) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tfile(value) {\r\n\t\treturn typeof value.url === 'string';\r\n\t},\r\n\temail(value) {\r\n\t\treturn typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\r\n\t},\r\n\turl(value) {\r\n\t\treturn typeof value === 'string' && !!value.match(pattern.url);\r\n\t},\r\n\tpattern(reg, value) {\r\n\t\ttry {\r\n\t\t\treturn new RegExp(reg).test(value);\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tmethod(value) {\r\n\t\treturn typeof value === 'function';\r\n\t},\r\n\tidcard(value) {\r\n\t\treturn typeof value === 'string' && !!value.match(pattern.idcard);\r\n\t},\r\n\t'url-https'(value) {\r\n\t\treturn this.url(value) && value.startsWith('https://');\r\n\t},\r\n\t'url-scheme'(value) {\r\n\t\treturn value.startsWith('://');\r\n\t},\r\n\t'url-web'(value) {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nclass RuleValidator {\r\n\r\n\tconstructor(message) {\r\n\t\tthis._message = message\r\n\t}\r\n\r\n\tasync validateRule(fieldKey, fieldValue, value, data, allData) {\r\n\t\tvar result = null\r\n\r\n\t\tlet rules = fieldValue.rules\r\n\r\n\t\tlet hasRequired = rules.findIndex((item) => {\r\n\t\t\treturn item.required\r\n\t\t})\r\n\t\tif (hasRequired < 0) {\r\n\t\t\tif (value === null || value === undefined) {\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t\tif (typeof value === 'string' && !value.length) {\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar message = this._message\r\n\r\n\t\tif (rules === undefined) {\r\n\t\t\treturn message['default']\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < rules.length; i++) {\r\n\t\t\tlet rule = rules[i]\r\n\t\t\tlet vt = this._getValidateType(rule)\r\n\r\n\t\t\tObject.assign(rule, {\r\n\t\t\t\tlabel: fieldValue.label || `[\"${fieldKey}\"]`\r\n\t\t\t})\r\n\r\n\t\t\tif (RuleValidatorHelper[vt]) {\r\n\t\t\t\tresult = RuleValidatorHelper[vt](rule, value, message)\r\n\t\t\t\tif (result != null) {\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (rule.validateExpr) {\r\n\t\t\t\tlet now = Date.now()\r\n\t\t\t\tlet resultExpr = rule.validateExpr(value, allData, now)\r\n\t\t\t\tif (resultExpr === false) {\r\n\t\t\t\t\tresult = this._getMessage(rule, rule.errorMessage || this._message['default'])\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (rule.validateFunction) {\r\n\t\t\t\tresult = await this.validateFunction(rule, value, data, allData, vt)\r\n\t\t\t\tif (result !== null) {\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (result !== null) {\r\n\t\t\tresult = message.TAG + result\r\n\t\t}\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync validateFunction(rule, value, data, allData, vt) {\r\n\t\tlet result = null\r\n\t\ttry {\r\n\t\t\tlet callbackMessage = null\r\n\t\t\tconst res = await rule.validateFunction(rule, value, allData || data, (message) => {\r\n\t\t\t\tcallbackMessage = message\r\n\t\t\t})\r\n\t\t\tif (callbackMessage || (typeof res === 'string' && res) || res === false) {\r\n\t\t\t\tresult = this._getMessage(rule, callbackMessage || res, vt)\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tresult = this._getMessage(rule, e.message, vt)\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\t_getMessage(rule, message, vt) {\r\n\t\treturn formatMessage(rule, message || rule.errorMessage || this._message[vt] || message['default'])\r\n\t}\r\n\r\n\t_getValidateType(rule) {\r\n\t\tvar result = ''\r\n\t\tif (rule.required) {\r\n\t\t\tresult = 'required'\r\n\t\t} else if (rule.format) {\r\n\t\t\tresult = 'format'\r\n\t\t} else if (rule.arrayType) {\r\n\t\t\tresult = 'arrayTypeFormat'\r\n\t\t} else if (rule.range) {\r\n\t\t\tresult = 'range'\r\n\t\t} else if (rule.maximum !== undefined || rule.minimum !== undefined) {\r\n\t\t\tresult = 'rangeNumber'\r\n\t\t} else if (rule.maxLength !== undefined || rule.minLength !== undefined) {\r\n\t\t\tresult = 'rangeLength'\r\n\t\t} else if (rule.pattern) {\r\n\t\t\tresult = 'pattern'\r\n\t\t} else if (rule.validateFunction) {\r\n\t\t\tresult = 'validateFunction'\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n}\r\n\r\nconst RuleValidatorHelper = {\r\n\trequired(rule, value, message) {\r\n\t\tif (rule.required && isEmptyValue(value, rule.format || typeof value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.required);\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\trange(rule, value, message) {\r\n\t\tconst {\r\n\t\t\trange,\r\n\t\t\terrorMessage\r\n\t\t} = rule;\r\n\r\n\t\tlet list = new Array(range.length);\r\n\t\tfor (let i = 0; i < range.length; i++) {\r\n\t\t\tconst item = range[i];\r\n\t\t\tif (types.object(item) && item.value !== undefined) {\r\n\t\t\t\tlist[i] = item.value;\r\n\t\t\t} else {\r\n\t\t\t\tlist[i] = item;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet result = false\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tresult = (new Set(value.concat(list)).size === list.length);\r\n\t\t} else {\r\n\t\t\tif (list.indexOf(value) > -1) {\r\n\t\t\t\tresult = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!result) {\r\n\t\t\treturn formatMessage(rule, errorMessage || message['enum']);\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\trangeNumber(rule, value, message) {\r\n\t\tif (!types.number(value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.pattern.mismatch);\r\n\t\t}\r\n\r\n\t\tlet {\r\n\t\t\tminimum,\r\n\t\t\tmaximum,\r\n\t\t\texclusiveMinimum,\r\n\t\t\texclusiveMaximum\r\n\t\t} = rule;\r\n\t\tlet min = exclusiveMinimum ? value <= minimum : value < minimum;\r\n\t\tlet max = exclusiveMaximum ? value >= maximum : value > maximum;\r\n\r\n\t\tif (minimum !== undefined && min) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['number'][exclusiveMinimum ?\r\n\t\t\t\t'exclusiveMinimum' : 'minimum'\r\n\t\t\t])\r\n\t\t} else if (maximum !== undefined && max) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['number'][exclusiveMaximum ?\r\n\t\t\t\t'exclusiveMaximum' : 'maximum'\r\n\t\t\t])\r\n\t\t} else if (minimum !== undefined && maximum !== undefined && (min || max)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['number'].range)\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\trangeLength(rule, value, message) {\r\n\t\tif (!types.string(value) && !types.array(value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.pattern.mismatch);\r\n\t\t}\r\n\r\n\t\tlet min = rule.minLength;\r\n\t\tlet max = rule.maxLength;\r\n\t\tlet val = value.length;\r\n\r\n\t\tif (min !== undefined && val < min) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['length'].minLength)\r\n\t\t} else if (max !== undefined && val > max) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['length'].maxLength)\r\n\t\t} else if (min !== undefined && max !== undefined && (val < min || val > max)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message['length'].range)\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\tpattern(rule, value, message) {\r\n\t\tif (!types['pattern'](rule.pattern, value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.pattern.mismatch);\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\tformat(rule, value, message) {\r\n\t\tvar customTypes = Object.keys(types);\r\n\t\tvar format = FORMAT_MAPPING[rule.format] ? FORMAT_MAPPING[rule.format] : (rule.format || rule.arrayType);\r\n\r\n\t\tif (customTypes.indexOf(format) > -1) {\r\n\t\t\tif (!types[format](value)) {\r\n\t\t\t\treturn formatMessage(rule, rule.errorMessage || message.typeError);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t},\r\n\r\n\tarrayTypeFormat(rule, value, message) {\r\n\t\tif (!Array.isArray(value)) {\r\n\t\t\treturn formatMessage(rule, rule.errorMessage || message.typeError);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\tconst element = value[i];\r\n\t\t\tlet formatResult = this.format(rule, element, message)\r\n\t\t\tif (formatResult !== null) {\r\n\t\t\t\treturn formatResult\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n}\r\n\r\nclass SchemaValidator extends RuleValidator {\r\n\r\n\tconstructor(schema, options) {\r\n\t\tsuper(SchemaValidator.message);\r\n\r\n\t\tthis._schema = schema\r\n\t\tthis._options = options || null\r\n\t}\r\n\r\n\tupdateSchema(schema) {\r\n\t\tthis._schema = schema\r\n\t}\r\n\r\n\tasync validate(data, allData) {\r\n\t\tlet result = this._checkFieldInSchema(data)\r\n\t\tif (!result) {\r\n\t\t\tresult = await this.invokeValidate(data, false, allData)\r\n\t\t}\r\n\t\treturn result.length ? result[0] : null\r\n\t}\r\n\r\n\tasync validateAll(data, allData) {\r\n\t\tlet result = this._checkFieldInSchema(data)\r\n\t\tif (!result) {\r\n\t\t\tresult = await this.invokeValidate(data, true, allData)\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync validateUpdate(data, allData) {\r\n\t\tlet result = this._checkFieldInSchema(data)\r\n\t\tif (!result) {\r\n\t\t\tresult = await this.invokeValidateUpdate(data, false, allData)\r\n\t\t}\r\n\t\treturn result.length ? result[0] : null\r\n\t}\r\n\r\n\tasync invokeValidate(data, all, allData) {\r\n\t\tlet result = []\r\n\t\tlet schema = this._schema\r\n\t\tfor (let key in schema) {\r\n\t\t\tlet value = schema[key]\r\n\t\t\tlet errorMessage = await this.validateRule(key, value, data[key], data, allData)\r\n\t\t\tif (errorMessage != null) {\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\terrorMessage\r\n\t\t\t\t})\r\n\t\t\t\tif (!all) break\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tasync invokeValidateUpdate(data, all, allData) {\r\n\t\tlet result = []\r\n\t\tfor (let key in data) {\r\n\t\t\tlet errorMessage = await this.validateRule(key, this._schema[key], data[key], data, allData)\r\n\t\t\tif (errorMessage != null) {\r\n\t\t\t\tresult.push({\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\terrorMessage\r\n\t\t\t\t})\r\n\t\t\t\tif (!all) break\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\t_checkFieldInSchema(data) {\r\n\t\tvar keys = Object.keys(data)\r\n\t\tvar keys2 = Object.keys(this._schema)\r\n\t\tif (new Set(keys.concat(keys2)).size === keys2.length) {\r\n\t\t\treturn ''\r\n\t\t}\r\n\r\n\t\tvar noExistFields = keys.filter((key) => {\r\n\t\t\treturn keys2.indexOf(key) < 0;\r\n\t\t})\r\n\t\tvar errorMessage = formatMessage({\r\n\t\t\tfield: JSON.stringify(noExistFields)\r\n\t\t}, SchemaValidator.message.TAG + SchemaValidator.message['defaultInvalid'])\r\n\t\treturn [{\r\n\t\t\tkey: 'invalid',\r\n\t\t\terrorMessage\r\n\t\t}]\r\n\t}\r\n}\r\n\r\nfunction Message() {\r\n\treturn {\r\n\t\tTAG: \"\",\r\n\t\tdefault: '验证错误',\r\n\t\tdefaultInvalid: '提交的字段{field}在数据库中并不存在',\r\n\t\tvalidateFunction: '验证无效',\r\n\t\trequired: '{label}必填',\r\n\t\t'enum': '{label}超出范围',\r\n\t\ttimestamp: '{label}格式无效',\r\n\t\twhitespace: '{label}不能为空',\r\n\t\ttypeError: '{label}类型无效',\r\n\t\tdate: {\r\n\t\t\tformat: '{label}日期{value}格式无效',\r\n\t\t\tparse: '{label}日期无法解析,{value}无效',\r\n\t\t\tinvalid: '{label}日期{value}无效'\r\n\t\t},\r\n\t\tlength: {\r\n\t\t\tminLength: '{label}长度不能少于{minLength}',\r\n\t\t\tmaxLength: '{label}长度不能超过{maxLength}',\r\n\t\t\trange: '{label}必须介于{minLength}和{maxLength}之间'\r\n\t\t},\r\n\t\tnumber: {\r\n\t\t\tminimum: '{label}不能小于{minimum}',\r\n\t\t\tmaximum: '{label}不能大于{maximum}',\r\n\t\t\texclusiveMinimum: '{label}不能小于等于{minimum}',\r\n\t\t\texclusiveMaximum: '{label}不能大于等于{maximum}',\r\n\t\t\trange: '{label}必须介于{minimum}and{maximum}之间'\r\n\t\t},\r\n\t\tpattern: {\r\n\t\t\tmismatch: '{label}格式不匹配'\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nSchemaValidator.message = new Message();\r\n\r\nexport default SchemaValidator\n"],"names":[],"mappings":"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"}